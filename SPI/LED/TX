//SPI TX MASTER full duplex
//8Mhz
#include "stm32f1xx.h"
volatile int data = 0;
void spi_init()
{
    //PINS
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_AFIOEN;
    //NSS1 ----PA4      AF output
    GPIOA->CRL &= ~GPIO_CRL_CNF4;
    GPIOA->CRL |= GPIO_CRL_CNF4_1;
    GPIOA->CRL |= GPIO_CRL_MODE4_0;

    //SCK ----PA5       AF output
    GPIOA->CRL &= ~GPIO_CRL_CNF5;
    GPIOA->CRL |= GPIO_CRL_CNF5_1;
    GPIOA->CRL |= GPIO_CRL_MODE5_0;

    //MISO ----PA6
    //floating input by default

    //MOSI ----PA7   AF output push pull
    GPIOA->CRL &= ~GPIO_CRL_CNF7;
    GPIOA->CRL |= GPIO_CRL_CNF7_1;
    GPIOA->CRL |= GPIO_CRL_MODE7_0;

    RCC->APB2ENR |= RCC_APB2ENR_SPI1EN; //spi clock en
    SPI1->CR1 |= SPI_CR1_BR_0;          //baud rate
    SPI1->CR1 |= SPI_CR1_MSTR;          //select master mode
    SPI1->CR2 |= SPI_CR2_SSOE;          //enable SS output
    SPI1->CR1 |= SPI_CR1_SPE;           //enable spi
}
void delay_ms(uint16_t ms)
{
    TIM3->ARR = ms;
    TIM3->EGR = 1;
    TIM3->CR1 |= TIM_CR1_CEN;
    while (!(TIM3->SR & TIM_SR_UIF))
        ;
    TIM3->SR &= ~TIM_SR_UIF;
}
int main()
{
    //onboard LED pi C13
    RCC->APB2ENR |= RCC_APB2ENR_IOPCEN;
    GPIOC->CRH &= ~GPIO_CRH_CNF13;
    GPIOC->CRH |= GPIO_CRH_MODE13_0;

    //timer 3 settings for delay (8Mhz only)
    RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
    TIM3->PSC = 8000;
    TIM3->CR1 |= TIM_CR1_ARPE;
    TIM3->CR1 |= TIM_CR1_OPM | TIM_CR1_URS;
    spi_init();
    while (1)
    {
        delay_ms(3000);
        SPI1->DR = 10;
        while (!(SPI1->SR & SPI_SR_TXE))
            ;
    }
}
